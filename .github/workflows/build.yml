name: build

on:
  push:
    branches:
    - '**'
    tags:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  alpine:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        PS_VERSION: [7.0.3, 7.0.2, 7.0.1, 7.0.0]
        OS: [alpine]
        OS_VARIANT: ['3.10', 3.9, 3.8]
        TOOL_VARIANT: [git, git-ssh, git-sudo]
        include:
        - OS: alpine
          OS_VARIANT: '3.10'
          TAG_PS_OS_TOOL: true
        - PS_VERSION: 7.0.3
          OS: alpine
          OS_VARIANT: '3.10'
          TOOL_VARIANT: git-ssh
          TAG_OS_TOOL: true
          TAG_TOOL: true
    env:
      PS_VERSION: ${{ matrix.PS_VERSION }}
      OS: ${{ matrix.OS }}
      OS_VARIANT: ${{ matrix.OS_VARIANT }}
      TOOL_VARIANT: ${{ matrix.TOOL_VARIANT }}
      TAG_PS_OS_TOOL: ${{ matrix.TAG_PS_OS_TOOL }}
      TAG_OS_TOOL: ${{ matrix.TAG_OS_TOOL }}
      TAG_TOOL: ${{ matrix.TAG_TOOL }}
      TAG_LATEST: ${{ matrix.TAG_LATEST }}
      BASE_REGISTRY_NAMESPACE: mcr.microsoft.com
      BASE_IMAGE_NAME: powershell
      BASE_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}
      BUILD_REGISTRY_NAMESPACE: joeltimothyoh
      BUILD_IMAGE_NAME: powershell
      BUILD_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}-${{ matrix.TOOL_VARIANT }}
      BUILD_CONTEXT: variants/${{ matrix.OS }}/${{ matrix.TOOL_VARIANT }}
    steps:
    - uses: actions/checkout@v1
    - name: Display system info (linux)
      run: |
        set -e
        hostname
        whoami
        cat /etc/*release
        lscpu
        free
        df -h
        pwd
        docker info
        docker version
    - name: Login to docker registry
      if: startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/')
      run: echo "${DOCKERHUB_REGISTRY_PASSWORD}" | docker login -u "${DOCKERHUB_REGISTRY_USER}" --password-stdin
      env:
        DOCKERHUB_REGISTRY_USER: joeltimothyoh
        DOCKERHUB_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}
    - name: Build image
      run: |
        set -e
        echo "PS_VERSION: $PS_VERSION"
        echo "OS: $OS"
        echo "OS_VARIANT: $OS_VARIANT"
        echo "TOOL_VARIANT: $TOOL_VARIANT"
        echo "TAG_PS_OS_TOOL: $TAG_PS_OS_TOOL"
        echo "TAG_OS_TOOL: $TAG_OS_TOOL"
        echo "TAG_TOOL: $TAG_TOOL"
        echo "TAG_LATEST: $TAG_LATEST"
        echo "BASE_REGISTRY_NAMESPACE: $BASE_REGISTRY_NAMESPACE"
        echo "BASE_IMAGE_NAME: $BASE_IMAGE_NAME"
        echo "BASE_TAG_FULL: $BASE_TAG_FULL"
        echo "BUILD_REGISTRY_NAMESPACE: $BUILD_REGISTRY_NAMESPACE"
        echo "BUILD_IMAGE_NAME: $BUILD_IMAGE_NAME"
        echo "BUILD_TAG_FULL: $BUILD_TAG_FULL"
        echo "BUILD_CONTEXT: $BUILD_CONTEXT"
        echo "BASE_IMAGE: ${BASE_REGISTRY_NAMESPACE}/${BASE_IMAGE_NAME}:${BASE_TAG_FULL}"
        echo "BUILD_IMAGE: ${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}"
        time docker pull "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" || true
        time docker build \
            --cache-from "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" \
            -t "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" \
            --build-arg BASE_IMAGE="${BASE_REGISTRY_NAMESPACE}/${BASE_IMAGE_NAME}:${BASE_TAG_FULL}" \
            "$BUILD_CONTEXT"
        if [ "${TAG_PS_OS_TOOL}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${PS_VERSION}-${OS}-${TOOL_VARIANT}"
        fi
        if [ "${TAG_OS_TOOL}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${OS}-${TOOL_VARIANT}"
        fi
        if [ "${TAG_TOOL}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${TOOL_VARIANT}"
        fi
        if [ "${TAG_LATEST}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:latest"
        fi
        docker images
        docker inspect "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}"
    - name: Test image
      run: docker run -t --rm "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" pwsh -c '$PSVersionTable'
    - name: Push image
      if: startsWith(github.ref, 'refs/tags/')
      run: docker push -a "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}"
    - name: Clean-up
      if: always()
      run: docker logout
  ubuntu:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        PS_VERSION: [7.0.3, 7.0.2, 7.0.1, 7.0.0]
        OS: [ubuntu]
        OS_VARIANT: [18.04, 16.04]
        TOOL_VARIANT: [git, git-ssh, git-sudo]
        include:
        - OS: ubuntu
          OS_VARIANT: 18.04
          TAG_PS_OS_TOOL: true
        - PS_VERSION: 7.0.3
          OS: ubuntu
          OS_VARIANT: 18.04
          TOOL_VARIANT: git
          TAG_OS_TOOL: true
          TAG_TOOL: true
          TAG_LATEST: true
        - PS_VERSION: 7.0.3
          OS: ubuntu
          OS_VARIANT: 18.04
          TOOL_VARIANT: git-sudo
          TAG_OS_TOOL: true
          TAG_TOOL: true
    env:
      PS_VERSION: ${{ matrix.PS_VERSION }}
      OS: ${{ matrix.OS }}
      OS_VARIANT: ${{ matrix.OS_VARIANT }}
      TOOL_VARIANT: ${{ matrix.TOOL_VARIANT }}
      TAG_PS_OS_TOOL: ${{ matrix.TAG_PS_OS_TOOL }}
      TAG_OS_TOOL: ${{ matrix.TAG_OS_TOOL }}
      TAG_TOOL: ${{ matrix.TAG_TOOL }}
      TAG_LATEST: ${{ matrix.TAG_LATEST }}
      BASE_REGISTRY_NAMESPACE: mcr.microsoft.com
      BASE_IMAGE_NAME: powershell
      BASE_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}
      BUILD_REGISTRY_NAMESPACE: joeltimothyoh
      BUILD_IMAGE_NAME: powershell
      BUILD_TAG_FULL: ${{ matrix.PS_VERSION }}-${{ matrix.OS }}-${{ matrix.OS_VARIANT }}-${{ matrix.TOOL_VARIANT }}
      BUILD_CONTEXT: variants/${{ matrix.OS }}/${{ matrix.TOOL_VARIANT }}
    steps:
    - uses: actions/checkout@v1
    - name: Display system info (linux)
      run: |
        set -e
        hostname
        whoami
        cat /etc/*release
        lscpu
        free
        df -h
        pwd
        docker info
        docker version
    - name: Login to docker registry
      if: startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/')
      run: echo "${DOCKERHUB_REGISTRY_PASSWORD}" | docker login -u "${DOCKERHUB_REGISTRY_USER}" --password-stdin
      env:
        DOCKERHUB_REGISTRY_USER: joeltimothyoh
        DOCKERHUB_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}
    - name: Build image
      run: |
        set -e
        echo "PS_VERSION: $PS_VERSION"
        echo "OS: $OS"
        echo "OS_VARIANT: $OS_VARIANT"
        echo "TOOL_VARIANT: $TOOL_VARIANT"
        echo "TAG_PS_OS_TOOL: $TAG_PS_OS_TOOL"
        echo "TAG_OS_TOOL: $TAG_OS_TOOL"
        echo "TAG_TOOL: $TAG_TOOL"
        echo "TAG_LATEST: $TAG_LATEST"
        echo "BASE_REGISTRY_NAMESPACE: $BASE_REGISTRY_NAMESPACE"
        echo "BASE_IMAGE_NAME: $BASE_IMAGE_NAME"
        echo "BASE_TAG_FULL: $BASE_TAG_FULL"
        echo "BUILD_REGISTRY_NAMESPACE: $BUILD_REGISTRY_NAMESPACE"
        echo "BUILD_IMAGE_NAME: $BUILD_IMAGE_NAME"
        echo "BUILD_TAG_FULL: $BUILD_TAG_FULL"
        echo "BUILD_CONTEXT: $BUILD_CONTEXT"
        echo "BASE_IMAGE: ${BASE_REGISTRY_NAMESPACE}/${BASE_IMAGE_NAME}:${BASE_TAG_FULL}"
        echo "BUILD_IMAGE: ${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}"
        time docker pull "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" || true
        time docker build \
            --cache-from "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" \
            -t "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" \
            --build-arg BASE_IMAGE="${BASE_REGISTRY_NAMESPACE}/${BASE_IMAGE_NAME}:${BASE_TAG_FULL}" \
            "$BUILD_CONTEXT"
        if [ "${TAG_PS_OS_TOOL}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${PS_VERSION}-${OS}-${TOOL_VARIANT}"
        fi
        if [ "${TAG_OS_TOOL}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${OS}-${TOOL_VARIANT}"
        fi
        if [ "${TAG_TOOL}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${TOOL_VARIANT}"
        fi
        if [ "${TAG_LATEST}" = 'true' ]; then
            docker tag "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:latest"
        fi
        docker images
        docker inspect "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}"
    - name: Test image
      run: docker run -t --rm "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}:${BUILD_TAG_FULL}" pwsh -c '$PSVersionTable'
    - name: Push image
      if: startsWith(github.ref, 'refs/tags/')
      run: docker push -a "${BUILD_REGISTRY_NAMESPACE}/${BUILD_IMAGE_NAME}"
    - name: Clean-up
      if: always()
      run: docker logout
