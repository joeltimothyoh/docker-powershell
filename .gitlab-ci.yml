image: docker:latest

services:
  - docker:dind

stages:
  - build

variables:
  DOCKER_DRIVER: overlay2
  REPOSITORY: "${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"

before_script:
  - echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USER --password-stdin

.build_template: &build_definition
  stage: build
  script:
    - VARIANT="${PS_VERSION}-${OS}-${OS_VARIANT}-${TOOL_VARIANT}"
    - docker pull "${REPOSITORY}:${VARIANT}" || true
    - docker build
        --cache-from "${REPOSITORY}:${VARIANT}"
        -t "${REPOSITORY}:${VARIANT}"
        --build-arg IMAGE="mcr.microsoft.com/${CI_PROJECT_NAME}:${PS_VERSION}-${OS}-${OS_VARIANT}"
        "${TOOL_VARIANT}/${OS}/"
    - if [ "${TOOL_OS_DEFAULT}" = 'true' ]; then
        docker tag "${REPOSITORY}:${VARIANT}" "${REPOSITORY}:${TOOL_VARIANT}-${OS}";
      fi
    - if [ "${TOOL_DEFAULT}" = 'true' ]; then
        docker tag "${REPOSITORY}:${VARIANT}" "${REPOSITORY}:${TOOL_VARIANT}";
      fi
    - docker images
    - docker push "${REPOSITORY}"

git-ubuntu:
  variables:
    TOOL_VARIANT: "git"
    PS_VERSION: "6.1.0"
    OS: "ubuntu"
    OS_VARIANT: "18.04"
    TOOL_OS_DEFAULT: "true"
    TOOL_DEFAULT: "true"
  <<: *build_definition

git-alpine:
  variables:
    TOOL_VARIANT: "git"
    PS_VERSION: "6.1.0"
    OS: "alpine"
    OS_VARIANT: "3.8"
    TOOL_OS_DEFAULT: "true"
  <<: *build_definition

after_script:
  - docker logout