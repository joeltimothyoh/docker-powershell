image: docker:latest

services:
  - docker:dind

stages:
  - build

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: "powershell"
  REPOSITORY: "${CI_PROJECT_NAMESPACE}/${IMAGE_NAME}"

.build_template: &build_definition
  stage: build
  before_script:
    - echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USER --password-stdin
  script:
    - VARIANT="${PS_VERSION}-${OS}-${OS_VARIANT}-${TOOL_VARIANT}"
    - BASE_IMAGE="mcr.microsoft.com/${IMAGE_NAME}:${PS_VERSION}-${OS}-${OS_VARIANT}"
    - docker pull "${REPOSITORY}:${VARIANT}" || true
    - docker build
        --cache-from "${REPOSITORY}:${VARIANT}"
        -t "${REPOSITORY}:${VARIANT}"
        --build-arg BASE_IMAGE="${BASE_IMAGE}"
        "${TOOL_VARIANT}/${OS}/"
    - if [ "${TOOL_OS_DEFAULT}" = 'true' ]; then
        docker tag "${REPOSITORY}:${VARIANT}" "${REPOSITORY}:${TOOL_VARIANT}-${OS}";
      fi
    - if [ "${TOOL_DEFAULT}" = 'true' ]; then
        docker tag "${REPOSITORY}:${VARIANT}" "${REPOSITORY}:${TOOL_VARIANT}";
      fi
    - docker images
    - docker push "${REPOSITORY}"
  after_script:
    - docker logout

.ubuntu_template:
  variables:
    PS_VERSION: "6.1.0"
    OS: "ubuntu"
    OS_VARIANT: "18.04"
.alpine_template:
  variables:
    PS_VERSION: "6.1.0"
    OS: "alpine"
    OS_VARIANT: "3.8"

git-ubuntu:
  extends: .ubuntu_template
  variables:
    TOOL_VARIANT: "git"
    TOOL_OS_DEFAULT: "true"
    TOOL_DEFAULT: "true"
  <<: *build_definition
git-alpine:
  extends: .alpine_template
  variables:
    TOOL_VARIANT: "git"
  <<: *build_definition

git-ssh-ubuntu:
  extends: .ubuntu_template
  variables:
    TOOL_VARIANT: "git-ssh"
    TOOL_DEFAULT: "true"
  <<: *build_definition
git-ssh-alpine:
  extends: .alpine_template
  variables:
    TOOL_VARIANT: "git-ssh"
    TOOL_OS_DEFAULT: "true"
  <<: *build_definition